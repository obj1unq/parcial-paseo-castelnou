import paseo.*
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierda = new PrendaInd(desgaste = 1) //elemento de par
	var mediaDerecha = new PrendaInd(desgaste = 3)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaPar(talle=s, prendaIzq=mediaIzquierda, prendaDer=mediaDerecha ) 
    
    var zapaIzquierda = new PrendaInd(desgaste = 0, abrigo=1) //elemento de par
	var zapaDerecha = new PrendaInd(desgaste = 0, abrigo=1)
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillasZoe = new PrendaPar(talle=s, prendaIzq=zapaIzquierda, prendaDer=zapaDerecha) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new RopaPesada(talle=s, abrigo=5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new RopaLiviana(talle=s) 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new RopaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new RopaLiviana(talle=xs, desgaste=5) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new RopaLiviana(talle=xs) //prenda liviana
	
	var ojotasIzquierda = new PrendaInd(desgaste = 1, abrigo = 2) //elemento de par
	var ojotasDerecha = new PrendaInd(desgaste = 3, abrigo = 3)

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotasMilena = new PrendaPar(talle=l, prendaIzq=ojotasIzquierda, prendaDer=ojotasDerecha) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new Problematico(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6 , mediasZoe.nivelComodidad(zoe) )
		assert.equals(8 , zapatillasZoe.nivelComodidad(zoe))
 		assert.equals(8 , jeanZoe.nivelComodidad(zoe))
		assert.equals(10 , remeraZoe.nivelComodidad(zoe))
		assert.equals(8 , camperaZoe.nivelComodidad(zoe))
		assert.equals(7 , remeraMilena.nivelComodidad(milena))		
		assert.equals(10 , calzaMilena.nivelComodidad(milena))
		assert.equals(-3 , ojotasMilena.nivelComodidad(milena))
	}

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.prendaIzq()
		var mediaDer = mediasZoe.prendaDer()
		var zapaIzq = zapatillasZoe.prendaIzq()
		var zapaDer = zapatillasZoe.prendaDer()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.prendaIzq())
		assert.equals(mediaDer, zapatillasZoe.prendaDer())
		assert.equals(zapaIzq, zapatillasZoe.prendaIzq())
		assert.equals(zapaDer, mediasZoe.prendaDer())
				
	}
	
	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test está incompleto!
		ojotasMilena.intercambiar(mediasZoe)
	}

//PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(2 , mediasZoe.nivelAbrigo())
		assert.equals(2 , zapatillasZoe.nivelAbrigo())
		assert.equals(5 , jeanZoe.nivelAbrigo())
		assert.equals(1 , remeraZoe.nivelAbrigo())
		assert.equals(3 , camperaZoe.nivelAbrigo())
		assert.equals(1 , remeraMilena.nivelAbrigo())		
		assert.equals(1 , calzaMilena.nivelAbrigo())
		assert.equals(5 , ojotasMilena.nivelAbrigo()) 
	}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedePasear())
		assert.notThat(familiaNoAptaParaSalir.puedePasear())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{calzaMilena,jeanZoe}, familiaNoAptaParaSalir.infaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos()
		)		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8 , mediaIzquierda.nivelDesgaste())
		assert.equals(4.2 , mediaDerecha.nivelDesgaste())
		assert.equals(3 , mediasZoe.nivelDesgaste())
		assert.equals(1 , zapatillasZoe.nivelDesgaste())
	 	assert.equals(1 , jeanZoe.nivelDesgaste())
		assert.equals(1 , remeraZoe.nivelDesgaste())
		assert.equals(1 , camperaZoe.nivelDesgaste()) 
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
		familiaNoAptaParaSalir.pasear()
	}
	
	
}